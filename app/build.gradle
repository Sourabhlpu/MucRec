apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.example.personal.shazamclone"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true


    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //   There is a new feature in gradle 3.0.0 called flavorDimension that allows you to combine
// different product flavors. We will be using just the "default" dimension

    flavorDimensions "default"

    productFlavors {

        dev {
            dimension "default"
            applicationIdSuffix '.dev'
            // The applicationId now becomes "com.mobymagic.shazamclone.dev"
            versionNameSuffix "-dev" // The versionName you define above now have a "-dev" suffix
            resValue "string", "app_name", "Shazam Clone Dev"
            // Changes the app name to "Shazam Clone Dev"

            // [Performance optimization] The following configuration limits the "dev" flavor// to using English string resources and xxhdpi screen-density resources.
            resConfigs "en", "xxhdpi"
        }

        mock {

            dimension "default"
            applicationIdSuffix '.mock'
            versionNameSuffix "-mock"
            resValue "string", "app_name", "Shazam Clone Mock"
        }

        prod {

            dimension "default"
            resValue "string", "app_name", "Shazam Clone"
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Support dependencies
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:26.1.0'
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"

    // Other dependencies
    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    compile "com.github.ybq:Android-SpinKit:$rootProject.ext.spinKitVersion"

    // Local unit tests dependencies
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

    // Android Testing Support Library's runner and rules dependencies
    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.ext.rulesVersion"

    // Espresso UI Testing dependencies
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
    testCompile 'com.nhaarman:mockito-kotlin:1.1.0'

    //for adding ACRCloud libraries in the project
    compile files('libs/acrcloud-android-sdk-1.5.7.2.jar')
    implementation files('libs/YouTubeAndroidPlayerApi.jar')

    implementation files('libs/google-api-services-youtube-v3-rev193-1.23.0.jar')



    //library for room database
    kapt "android.arch.persistence.room:compiler:$room_version"
    compile "android.arch.persistence.room:runtime:$room_version"


    implementation "org.jetbrains.anko:anko-commons:$anko_version"

}
